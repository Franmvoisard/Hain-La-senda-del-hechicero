//Definiciones
 #define Vol_plus 2064;  //[PODESIRNOS]
 #define Vol_min 2065;   //[TEGUSTANLOSPIRATAS]
 #define Ch_plus 2080;   //[PODESVERNOS]
 #define Ch_min 2081;    //[QUERESPELEAR]  
 #define Uno 2049;       //[TENESALMA] 
 #define Dos 2050;       //[SOMOSAMIGOS] 
 #define Tres 2051;      //[CORAZONLENTO]
 #define Cuatro 2052;    //[CORAZONRAPIDO] 
 #define Cinco 2053;     //[VARITAENOJO] 
 #define Seis 2054;      //[VIENTO] 
 #define Siete 2055;     //[PAJAROS]
 #define Ocho 2056;      //[POSESION]
 #define Nueve 2057;     //[GIROSCOPIO]
 #define motorbase 5;    //Micromotor vibrador en el pin 5 de Arduino.
 #define motormedio 6;   //Motor en el pin 6 del Arduino
 #define INTERRUPT_PIN 3;//Pin de interrupción (INT de Giroscopio como D2 de arduino
 #define LedRojo 6;      //Pin de Led Rojo
 #define LedVerde 9;     //Pin de Led verde
 #define LedAzul 10;     //Pin de Led Azul

//Librerías
#include "I2Cdev.h"
#include <IRremote.h>
#include <SoftwareSerial.h>
#include <DFPlayer_Mini_Mp3.h>
#include "MPU6050.h"
#include "Wire.h"

unsigned long int _ahora = 0;
unsigned long int _ultimo = 0;
float _indice = 0;

const byte Motorbase = 5;
const byte Motormedio = 6;

int _vibracionActualMB = 0;
int _vibracionActualMM = 0;
int _ultimaVibracionMB = 0;
int _ultimaVibracionMM = 0;

bool _vibrando = false;

/////////////Flags/////////////
bool _funcion1 = false;
bool _funcion2 = false;
bool _funcion3 = false;


unsigned long int _tiempotrans= 0;


      int IRpin = 3;  //Sensor infrarrojo en el pin 3
      IRrecv irrecv(IRpin);  
      decode_results results;



SoftwareSerial mySerial(4, 7); //Iniciar la transmisión de datos para el MP3 RX, TX

void setup(){
irrecv.enableIRIn();
pinMode(Motorbase, LOW);
pinMode(Motormedio, LOW);
Serial.begin(9600);
}

void loop() {
    Serial.println("Ahora, ultimo, vibracionActualMB, vibracionActualMM,Ahora-ultimo,indice");
      Serial.println("   ");
      Serial.print(_ahora);
      Serial.print("    ");
      Serial.print(_ultimo);
      Serial.print("    ");
      Serial.print(_vibracionActualMB);
      Serial.print("    ");
      Serial.print(_vibracionActualMM);
      Serial.print("    ");
      Serial.print(_ahora -_ultimo);
      Serial.print("    ");
      Serial.print(_indice);
      Serial.print("    ");
      _ahora = millis();
      receiveIR();
      ActualizarMotores();
}
      
void ActualizarMotores(){
      if (_vibrando==true){
            
            analogWrite(Motorbase,_vibracionActualMB);
            analogWrite(Motormedio,_vibracionActualMM);
            if (_funcion1 == true) ActivarMotor(6,0,255,10000,1);
             if (_funcion2 == true) ActivarMotor(6,255,0,500,1);
              if (_funcion3 == true) ActivarMotor(6,0,255,300,1);
      }

      else {
            _ultimo = _ahora;
            if (_funcion1 == true) _vibrando = true;
            if (_funcion2 == true) _vibrando = true;
            if (_funcion3 == true) _vibrando = true;
      }
}

void receiveIR() {
  // Aca el llamado a la funcion que lee el IR, te guardas el valor en cmd para saber para donde switchear
  if (irrecv.decode(&results)){
  int cmd = results.value;
  Serial.println(" ");
  Serial.println("Codigo: ");
  Serial.println(cmd);
  switch(cmd){
    case 2064:
    _funcion1 = true;
      break;
    case 2065:
    _funcion2 = true;
      break;
    case 2080:
    _funcion3 = true;
      break;
    
  }
  irrecv.resume();
}
}

void ActivarMotor(int motor,int inicio, int fin, int duracion, int veces){ // Definir los parámetros básicos que afectaran al sistema compuesto por los motores

   if (_indice < 1){
      
      _indice = ((float)(_ahora - _ultimo))/ (float)duracion;
            
      if (motor == 5) {                                                            
            _vibracionActualMB =  (inicio + (_indice * (fin-inicio)));
      }
      else {
             _vibracionActualMM = (inicio + (_indice * (fin-inicio)));
      }
   }
   else {
    analogWrite(5,0);
    analogWrite(6,0);
    _vibracionActualMB = 0;
    _vibracionActualMM = 0;
    _vibrando = false;
    _indice = 0;
    _funcion1=false;
    _funcion2=false;
    _funcion3=false;
    }
}
